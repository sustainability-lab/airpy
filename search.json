[
  {
    "objectID": "examples/calendar_plot.html",
    "href": "examples/calendar_plot.html",
    "title": "Calendar Plot",
    "section": "",
    "text": "Sometimes it is useful to visualise data in a familiar way. Calendars are the obvious way to represent data for data on the time scale of days or months. The calendarPlot function provides an effective way to visualise data in this way by showing daily concentrations laid out in a calendar format. The concentration of a species is shown by its colour.\nStandard libraries to be imported for usage\n\nimport pandas as pd\nimport numpy as np\nfrom vayu import calendarPlot\n\nReading data.\n\ndf = pd.read_csv('data/mydata.csv.tar.gz')\ndf.head()\n\n\n\n\n\n\n\n\ndate\nws\nwd\nnox\nno2\no3\npm10\nso2\nco\npm25\n\n\n\n\n0\n01/01/1998 00:00\n0.60\n280.0\n285.0\n39.0\n1.0\n29.0\n4.7225\n3.3725\nNaN\n\n\n1\n01/01/1998 01:00\n2.16\n230.0\nNaN\nNaN\nNaN\n37.0\nNaN\nNaN\nNaN\n\n\n2\n01/01/1998 02:00\n2.76\n190.0\nNaN\nNaN\n3.0\n34.0\n6.8300\n9.6025\nNaN\n\n\n3\n01/01/1998 03:00\n2.16\n170.0\n493.0\n52.0\n3.0\n35.0\n7.6625\n10.2175\nNaN\n\n\n4\n01/01/1998 04:00\n2.40\n180.0\n468.0\n78.0\n2.0\n34.0\n8.0700\n8.9125\nNaN\n\n\n\n\n\n\n\nConverting date column to be of the type datetime64. And taking daily averages.\n\ndf['date']= pd.to_datetime(df['date'])\ndaily_df = df.groupby([df['date'].dt.date]).mean(numeric_only=True)\ndaily_df = daily_df.reset_index()\ndaily_df.head()\n\n\n\n\n\n\n\n\ndate\nindex\nws\nwd\nnox\nno2\no3\npm10\nso2\nco\npm25\n\n\n\n\n0\n1998-01-01\n11.5\n6.835\n191.666667\n153.954545\n39.363636\n6.869565\n18.166667\n3.152609\n2.699239\nNaN\n\n\n1\n1998-01-02\n755.5\n1.175\n89.166667\n149.375000\n41.208333\n2.250000\n25.000000\n4.862882\n1.857882\nNaN\n\n\n2\n1998-01-03\n1427.5\n6.750\n232.500000\n250.500000\n51.500000\n3.375000\n23.416667\n9.811528\n2.984965\nNaN\n\n\n3\n1998-01-04\n2171.5\n2.215\n98.333333\n239.541667\n46.541667\n1.875000\n45.583333\n21.792065\n2.409271\nNaN\n\n\n4\n1998-01-05\n2891.5\n3.570\n325.416667\n79.625000\n34.333333\n17.625000\n23.000000\n2.103958\n0.930347\n16.235294\n\n\n\n\n\n\n\n\nGetting a date column\nNote: Please note the datatypes of the different columns.\n\ncalendarPlot(df, pollutant='pm25', year='2003', country='India');\n\n/home/patel_zeel/miniconda3/lib/python3.9/site-packages/vayu/calendarPlot.py:99: FutureWarning: Indexing a DataFrame with a datetimelike index using a single string to slice the rows, like `frame[string]`, is deprecated and will be removed in a future version. Use `frame.loc[string]` instead.\n  df_year = df[year].resample(\"1D\").mean()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Vayu",
    "section": "",
    "text": "Vayu is a visualization tool for environmental data in Python. It can be helpful for data exploration and post analysis of results.\n\n\nStable version can be installed from PyPI using pip:\npip install vayu\nTo install the latest version from GitHub, use:\npip install git+https://github.com/sustainability-lab/vayu.git"
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "Vayu",
    "section": "",
    "text": "Stable version can be installed from PyPI using pip:\npip install vayu\nTo install the latest version from GitHub, use:\npip install git+https://github.com/sustainability-lab/vayu.git"
  },
  {
    "objectID": "examples/pollution_rose.html",
    "href": "examples/pollution_rose.html",
    "title": "Pollution Rose",
    "section": "",
    "text": "The traditional wind rose plot plots wind speed and wind direction. The “Pollution Rose” plot in vayu has the same structure but replaces wind speed with pollutants.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom vayu import pollutionRose\n\nLoading the data\n\ndf = pd.read_csv(\"data/mydata.csv.tar.gz\")\ndf.head()\n\n\n\n\n\n\n\n\ndate\nws\nwd\nnox\nno2\no3\npm10\nso2\nco\npm25\n\n\n\n\n0\n01/01/1998 00:00\n0.60\n280.0\n285.0\n39.0\n1.0\n29.0\n4.7225\n3.3725\nNaN\n\n\n1\n01/01/1998 01:00\n2.16\n230.0\nNaN\nNaN\nNaN\n37.0\nNaN\nNaN\nNaN\n\n\n2\n01/01/1998 02:00\n2.76\n190.0\nNaN\nNaN\n3.0\n34.0\n6.8300\n9.6025\nNaN\n\n\n3\n01/01/1998 03:00\n2.16\n170.0\n493.0\n52.0\n3.0\n35.0\n7.6625\n10.2175\nNaN\n\n\n4\n01/01/1998 04:00\n2.40\n180.0\n468.0\n78.0\n2.0\n34.0\n8.0700\n8.9125\nNaN\n\n\n\n\n\n\n\nNow, we plot the pollution rose for pm25, pm10 and o3.\n\npollutionRose(df, pollutant='pm25');\n\n\n\n\n\npollutionRose(df, pollutant='pm10');\n\n\n\n\n\npollutionRose(df, pollutant='o3');"
  }
]